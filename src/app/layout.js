import React from 'react';
import { AntdRegistry } from '@ant-design/nextjs-registry';
import localFont from "next/font/local";
import "./styles/globals.css";
import { NextIntlClientProvider } from 'next-intl';
import { getLocale, getMessages } from 'next-intl/server';
import LocaleSwitcher from './components/LocaleSwitcher';
import loadMessages from '@/utils/loadMessages';
import ReduxProvider from './components/ReduxProvider';  // Import ReduxProvider

const geistSans = localFont({
  src: "../../public/fonts/GeistVF.woff",
  variable: "--font-geist-sans",
  weight: "100 900",
});
const geistMono = localFont({
  src: "../../public/fonts/GeistMonoVF.woff",
  variable: "--font-geist-mono",
  weight: "100 900",
});

export const metadata = {
  title: "Create Next App",
  description: "Generated by create next app",
};

export default async function RootLayout({ children }) {
  const locale = await getLocale();
  // const { locale } = useRouter();

  // Providing all messages to the client side
  // const messages = await getMessages();
  // Convert messages to a plain object if needed
  // You may need to serialize or filter out non-serializable values
  // const serializedMessages = JSON.parse(JSON.stringify(messages)); // Ensure it is a plain object
  // Load the global messages (root) and merge them with page-specific messages
  const messages = loadMessages(locale);  // Default to 'app' folder's messages

  return (
    <html lang={locale}>
      <body>
        <ReduxProvider> {/* Wrap the layout content with ReduxProvider */}
          <NextIntlClientProvider messages={messages} locale={locale}>
            <main className="p-4 container mx-auto">
              <AntdRegistry>
                <LocaleSwitcher />
                {children}
              </AntdRegistry>
            </main>
          </NextIntlClientProvider>
        </ReduxProvider>
      </body>
    </html>
  );
}

